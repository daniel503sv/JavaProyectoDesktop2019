/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sv.edu.udb.proyecto.view;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sv.edu.udb.proyecto.Sesion;
import sv.edu.udb.proyecto.dao.exception.DAOException;
import sv.edu.udb.proyecto.modelo.Departamento;
import sv.edu.udb.proyecto.modelo.Incidente;
import sv.edu.udb.proyecto.utils.Utils;

/**
 *
 * @author josed
 */
public class IfrmAprobar extends javax.swing.JInternalFrame {

    /**
     * Creates new form IfrmAprobar
     */
    public static boolean activo;
    DefaultTableModel dtm;
    private Incidente incidenteActivo;
    private static SimpleDateFormat formato = new SimpleDateFormat("dd/MM/YYYY");
    private static SimpleDateFormat formatoCodigo = new SimpleDateFormat("ddMMYY");

    public IfrmAprobar() {
        activo = true;
        initComponents();
        cargarTabla();
        cargarSelects();
    }

    private void cargarSelects() {
        cbxProg.removeAllItems();
        cbxProb.removeAllItems();
        try {
            Departamento dep = Sesion.getDatos().getDepartamentoDAO().obtener(Sesion.getUsuario().getDepartamentoId());
            Sesion.getDatos().getUsuarioDAO().obtenerUsuariosRolDepartamento(
                    Sesion.getDatos().getRolDAO().obtener(6), //rol programador
                    dep
            ).forEach(prog -> {
                cbxProg.addItem(prog.getId() + "-" + prog.getNombre() + " " + prog.getApellido());
            });

            Sesion.getDatos().getUsuarioDAO().obtenerUsuariosRolDepartamento(
                    Sesion.getDatos().getRolDAO().obtener(4), //rol empleado
                    dep
            ).forEach(prob -> {
                cbxProb.addItem(prob.getId() + "-" + prob.getNombre() + " " + prob.getApellido());
            });
        } catch (SQLException | ClassNotFoundException | DAOException ex) {
            Logger.getLogger(IfrmProyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargarTabla() {
        Object[][] datos = {};
        String[] columnNames = Incidente.HEADERS;
        dtm = new DefaultTableModel(datos, columnNames);
        try {
            Departamento dep = Sesion.getDatos().getDepartamentoDAO().obtener(Sesion.getUsuario().getDepartamentoId());
            Sesion.getDatos().getIncidenteDAO().incidentesByDepartamentoAndEstado(dep, 1).forEach(proyecto -> {
                dtm.addRow(convertir(proyecto.getData()));
            });
            
            Sesion.getDatos().getIncidenteDAO().incidentesByDepartamentoAndEstado(dep, 7).forEach(proyecto -> {
                dtm.addRow(convertir(proyecto.getData()));
            });
        } catch (SQLException | ClassNotFoundException | DAOException ex) {
            Logger.getLogger(IfrmProyecto.class.getName()).log(Level.SEVERE, null, ex);
        }
        jtblIncidentes.setModel(dtm);

    }

    private Object[] convertir(Object[] fila) {
        try {
            fila[3] = ((((int) fila[3]) != 0)) ? Sesion.getDatos().getUsuarioDAO().obtener((int) fila[3]).getNombre() : "No asignado";
            fila[4] = ((((int) fila[4]) != 0)) ? Sesion.getDatos().getUsuarioDAO().obtener((int) fila[4]).getNombre() : "No asignado";
            fila[5] = formato.format((Date) fila[5]);
            fila[6] = Sesion.getDatos().getIncidenteDAO().estadoString((int) fila[6]);
            fila[7] = Sesion.getDatos().getProyectoDAO().obtener((int) fila[7]).getNombre();
        } catch (SQLException | ClassNotFoundException | DAOException ex) {
            Logger.getLogger(IfrmAprobar.class.getName()).log(Level.SEVERE, null, ex);
        }
        return fila;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblIncidentes = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbxProg = new javax.swing.JComboBox<>();
        cbxProb = new javax.swing.JComboBox<>();
        txtDate = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaDesc = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtTitulo = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDetalle = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jtblIncidentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtblIncidentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblIncidentesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblIncidentes);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Asignar"));

        jLabel1.setText("Programador");

        jLabel2.setText("Probador");

        jLabel3.setText("Fecha de entrega");

        jLabel4.setText("Descripción o razón de rechazo");

        cbxProg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbxProb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txaDesc.setColumns(20);
        txaDesc.setRows(5);
        jScrollPane2.setViewportView(txaDesc);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxProg, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxProb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDate)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxProg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxProb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(11, 11, 11)
                .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Incidente"));

        jLabel5.setText("ID:");

        jLabel6.setText("Titulo:");

        jLabel7.setText("Detalle:");

        txtID.setEditable(false);

        txtTitulo.setEditable(false);

        txtDetalle.setEditable(false);
        txtDetalle.setColumns(20);
        txtDetalle.setRows(5);
        jScrollPane3.setViewportView(txtDetalle);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Asignar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Rechazar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 285, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked

    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jtblIncidentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblIncidentesMouseClicked
        int fila = jtblIncidentes.rowAtPoint(evt.getPoint());
        int columna = jtblIncidentes.columnAtPoint(evt.getPoint());
        if ((fila > -1) && (columna > -1)) {
            try {
                incidenteActivo = Sesion.getDatos().getIncidenteDAO().obtener((int) dtm.getValueAt(fila, 0));
                txtID.setText(String.valueOf(incidenteActivo.getId()));
                txtTitulo.setText(incidenteActivo.getNombre());
                txtDetalle.setText(incidenteActivo.getDescripcion());
            } catch (SQLException | ClassNotFoundException | DAOException ex) {
                Logger.getLogger(IfrmAprobar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jtblIncidentesMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            if (incidenteActivo != null) {
                incidenteActivo.setEstado(3);
                incidenteActivo.setDetalleCaso(txaDesc.getText());
                System.out.println(incidenteActivo);
                try {
                    Sesion.getDatos().getIncidenteDAO().modificar(incidenteActivo);
                    limpiar();
                    cargarTabla();
                } catch (SQLException | ClassNotFoundException | DAOException ex) {
                    System.out.println(ex);
                    JOptionPane.showMessageDialog(this, "No se pudo cambiar el estado");
                }
               
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un incidente");
            }
  
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            if (incidenteActivo != null) {
                 Departamento dep ;
                 try {
                   dep = Sesion.getDatos().getDepartamentoDAO().obtener(Sesion.getUsuario().getDepartamentoId());
                } catch (SQLException | ClassNotFoundException | DAOException ex) {
                    Logger.getLogger(IfrmAprobar.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "No se pudo obtener el departamento");
                     System.out.println(ex);
                     return;
                }
                
                try{
                    incidenteActivo.setFechaEntrega(formato.parse(txtDate.getText()));
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(this, "Debe ingresar una fecha con formato dd/MM/yyyy");
                }
                incidenteActivo.setEstado(2);
                incidenteActivo.setDetalleCaso(txaDesc.getText());
                incidenteActivo.setDesarrollador(
                    Integer.valueOf(
                            ((String)cbxProg.getSelectedItem()).split("-")[0])
                );
                
                incidenteActivo.setProbador(
                    Integer.valueOf(
                            ((String)cbxProb.getSelectedItem()).split("-")[0])
                );
                
               

                incidenteActivo.setCodigo(
                        dep.getNombre().toUpperCase().substring(0, 2)+ //3 letras dep
                                formatoCodigo.format(incidenteActivo.getFechaCreacion())+ //fecha de creacion
                               Utils.randNumber(3) //3 numeros rand
                );
                
                
                System.out.println(incidenteActivo);
                try {
                    
                    Sesion.getDatos().getIncidenteDAO().modificar(incidenteActivo);
                    limpiar();
                    cargarTabla();
                } catch (SQLException | ClassNotFoundException | DAOException ex) {
                    System.out.println(ex);
                    JOptionPane.showMessageDialog(this, "No se pudo cambiar el estado");
                }
               
            } else {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un incidente");
            }
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void limpiar() {
        txaDesc.setText("");
        txtDate.setText("");
        txtID.setText("");
        txtTitulo.setText("");
        txtDetalle.setText("");
        incidenteActivo = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbxProb;
    private javax.swing.JComboBox<String> cbxProg;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtblIncidentes;
    private javax.swing.JTextArea txaDesc;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextArea txtDetalle;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
